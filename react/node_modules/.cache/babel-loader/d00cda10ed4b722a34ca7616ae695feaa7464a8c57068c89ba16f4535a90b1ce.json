{"ast":null,"code":"var _jsxFileName = \"/Users/coreyshen/devx-full-stack-template/react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5001/api/search?title=Inception') // Adjust title query as needed\n    .then(res => res.json()).then(data => setMovies(data)).catch(err => console.error('Error fetching movies:', err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: movie.Title\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","movies","setMovies","fetch","then","res","json","data","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","movie","Title","imdbID","_c","$RefreshReg$"],"sources":["/Users/coreyshen/devx-full-stack-template/react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:5001/api/search?title=Inception') // Adjust title query as needed\n      .then((res) => res.json())\n      .then((data) => setMovies(data))\n      .catch((err) => console.error('Error fetching movies:', err));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Movie Recommender</h1>\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map((movie) => (\n            <li key={movie.imdbID}>{movie.Title}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>Loading movies...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,kDAAkD,CAAC,CAAC;IAAA,CACvDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,SAAS,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBhB,MAAM,CAACiB,MAAM,GAAG,CAAC,gBAChBpB,OAAA;MAAAe,QAAA,EACGZ,MAAM,CAACkB,GAAG,CAAEC,KAAK,iBAChBtB,OAAA;QAAAe,QAAA,EAAwBO,KAAK,CAACC;MAAK,GAA1BD,KAAK,CAACE,MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELnB,OAAA;MAAAe,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CAxBQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}